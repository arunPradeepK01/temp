{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue-Bold;\f1\fnil\fcharset0 HelveticaNeue;\f2\fnil\fcharset0 HelveticaNeue-BoldItalic;
}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh18000\viewkind0
\deftab560
\pard\pardeftab560\slleading20\partightenfactor0

\f0\b\fs44 \cf0 EXERCISE 1: 
\f1\b0\fs24 \
\
import 'package:flutter/material.dart';\
\
void main() \{\
\'a0 runApp(MaterialApp(\
\'a0 \'a0 home: Home(),\
\'a0 ));\
\}\
\
class Home extends StatelessWidget \{\
\'a0 const Home(\{Key? key\}) : super(key: key);\
\
\'a0 @override\
\'a0 Widget build(BuildContext context) \{\
\'a0 \'a0 return Scaffold(\
\'a0 \'a0 \'a0 appBar: AppBar(\
\'a0 \'a0 \'a0 \'a0 \'a0 title: Text("Hello World"),\
\'a0 \'a0 \'a0 \'a0 \'a0 centerTitle: true,\
\'a0 \'a0 \'a0 \'a0 \'a0 backgroundColor: Color.fromARGB(255, 34, 126, 255)),\
\'a0 \'a0 \'a0 body: Center(\
\'a0 \'a0 \'a0 \'a0 child: Text(\
\'a0 \'a0 \'a0 \'a0 \'a0 "Hello World",\
\'a0 \'a0 \'a0 \'a0 \'a0 style: TextStyle(\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 fontSize: 45.0,\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 fontWeight: FontWeight.bold,\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 letterSpacing: 2.0,\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 color: Colors.blueGrey[600],\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 fontFamily: 'Arial',\
\'a0 \'a0 \'a0 \'a0 \'a0 ),\
\'a0 \'a0 \'a0 \'a0 ),\
\'a0 \'a0 \'a0 ),\
\'a0 \'a0 \'a0 floatingActionButton: FloatingActionButton(\
\'a0 \'a0 \'a0 \'a0 onPressed: () \{\},\
\'a0 \'a0 \'a0 \'a0 child: Text("+"),\
\'a0 \'a0 \'a0 \'a0 backgroundColor: Color.fromARGB(255, 34, 126, 255),\
\'a0 \'a0 \'a0 ),\
\'a0 \'a0 );\
\'a0 \}\
\}\
\

\f0\b\fs44 EXERCISE 2: \

\f1\b0\fs24 \
import 'package:flutter/material.dart';\
\
void main() \{\
\'a0 runApp(const MaterialApp(\
\'a0 \'a0 home: Home(),\
\'a0 ));\
\}\
\
class Home extends StatefulWidget \{\
\'a0 const Home(\{Key? key\}) : super(key: key);\
\
\'a0 @override\
\'a0 State<Home> createState() => _HomeState();\
\}\
\
class _HomeState extends State<Home> \{\
\'a0 int projects = 0;\
\'a0 @override\
\'a0 Widget build(BuildContext context) \{\
\'a0 \'a0 return Scaffold(\
\'a0 \'a0 \'a0 backgroundColor: Color.fromARGB(255, 223, 223, 225),\
\'a0 \'a0 \'a0 appBar: AppBar(\
\'a0 \'a0 \'a0 \'a0 title: Text("Sample layout"),\
\'a0 \'a0 \'a0 \'a0 backgroundColor: Colors.black12,\
\'a0 \'a0 \'a0 \'a0 centerTitle: true,\
\'a0 \'a0 \'a0 \'a0 elevation: 0.0,\
\'a0 \'a0 \'a0 ),\
\'a0 \'a0 \'a0 body: Padding(\
\'a0 \'a0 \'a0 \'a0 padding: EdgeInsets.fromLTRB(30.0, 40.0, 30.0, 0.0),\
\'a0 \'a0 \'a0 \'a0 child: Column(\
\'a0 \'a0 \'a0 \'a0 \'a0 crossAxisAlignment: CrossAxisAlignment.start,\
\'a0 \'a0 \'a0 \'a0 \'a0 children: <Widget>[\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 Center(\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 child: CircleAvatar(\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 backgroundImage: AssetImage('assets/flutter.png'),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 radius: 50.0,\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 ),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 ),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 SizedBox(\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 height: 20.0,\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 ),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 Text(\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 "Sample layout",\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 style: TextStyle(\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 color: Colors.black,\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 letterSpacing: 2.0,\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 ),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 ),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 SizedBox(\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 height: 10.0,\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 ),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 Text(\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 "$projects",\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 style: TextStyle(\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 color: Colors.blue,\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 letterSpacing: 2.0,\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 fontSize: 28.0,\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 fontWeight: FontWeight.bold,\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 ),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 ),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 SizedBox(\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 height: 20.0,\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 ),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 ElevatedButton(\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 onPressed: () \{\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 setState(() \{\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 projects++;\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \});\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \},\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 onLongPress: () \{\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 setState(() \{\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 projects *= 2;\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \});\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \},\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 child: Icon(\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 Icons.add,\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 ),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 style: ElevatedButton.styleFrom(\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 primary: Colors.green,\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 ),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 ),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 SizedBox(\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 height: 20.0,\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 ),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 ElevatedButton(\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 onPressed: () \{\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 setState(() \{\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 if (projects > 0) projects--;\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \});\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \},\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 onLongPress: () \{\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 setState(() \{\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 if (projects > 0) projects ~/= 2;\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \});\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \},\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 child: Icon(\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 Icons.remove,\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 ),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 style: ElevatedButton.styleFrom(\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 primary: Colors.deepOrange,\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 ),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 ),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 SizedBox(\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 height: 20.0,\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 ),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 Row(\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 children: [\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 SizedBox(\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 width: 20.0,\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 ),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 ],\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 )\
\'a0 \'a0 \'a0 \'a0 \'a0 ],\
\'a0 \'a0 \'a0 \'a0 ),\
\'a0 \'a0 \'a0 ),\
\'a0 \'a0 );\
\'a0 \}\
\}\
\

\f0\b\fs44 EXERCISE 3: \

\f1\b0\fs24 \
import 'package:flutter/material.dart';\
\
void main() => runApp(const MyApp());\
\
class MyApp extends StatelessWidget \{\
\'a0 const MyApp(\{Key? key\}) : super(key: key);\
\
\'a0 @override\
\'a0 Widget build(BuildContext context) \{\
\'a0 \'a0 return MaterialApp(\
\'a0 \'a0 \'a0 title: 'Calculator',\
\'a0 \'a0 \'a0 theme: ThemeData(\
\'a0 \'a0 \'a0 \'a0 primarySwatch: Colors.blue,\
\'a0 \'a0 \'a0 ),\
\'a0 \'a0 \'a0 debugShowCheckedModeBanner: false,\
\'a0 \'a0 \'a0 home: const MyHomePage(),\
\'a0 \'a0 );\
\'a0 \}\
\}\
\
class MyHomePage extends StatefulWidget \{\
\'a0 const MyHomePage(\{Key? key\}) : super(key: key);\
\
\'a0 @override\
\'a0 _MyHomePageState createState() => _MyHomePageState();\
\}\
\
class _MyHomePageState extends State<MyHomePage> \{\
\'a0 String output = "0";\
\
\'a0 String _output = "0";\
\'a0 double num1 = 0.0;\
\'a0 double num2 = 0.0;\
\'a0 String operand = "";\
\
\'a0 buttonPressed(String buttonText) \{\
\'a0 \'a0 if (buttonText == "CLEAR") \{\
\'a0 \'a0 \'a0 _output = "0";\
\'a0 \'a0 \'a0 num1 = 0.0;\
\'a0 \'a0 \'a0 num2 = 0.0;\
\'a0 \'a0 \'a0 operand = "";\
\'a0 \'a0 \} else if (buttonText == "+" ||\
\'a0 \'a0 \'a0 \'a0 buttonText == "-" ||\
\'a0 \'a0 \'a0 \'a0 buttonText == "/" ||\
\'a0 \'a0 \'a0 \'a0 buttonText == "X") \{\
\'a0 \'a0 \'a0 num1 = double.parse(output);\
\
\'a0 \'a0 \'a0 operand = buttonText;\
\
\'a0 \'a0 \'a0 _output = "0";\
\'a0 \'a0 \} else if (buttonText == ".") \{\
\'a0 \'a0 \'a0 if (_output.contains(".")) \{\
\'a0 \'a0 \'a0 \'a0 return;\
\'a0 \'a0 \'a0 \} else \{\
\'a0 \'a0 \'a0 \'a0 _output = _output + buttonText;\
\'a0 \'a0 \'a0 \}\
\'a0 \'a0 \} else if (buttonText == "=") \{\
\'a0 \'a0 \'a0 num2 = double.parse(output);\
\
\'a0 \'a0 \'a0 if (operand == "+") \{\
\'a0 \'a0 \'a0 \'a0 _output = (num1 + num2).toString();\
\'a0 \'a0 \'a0 \}\
\'a0 \'a0 \'a0 if (operand == "-") \{\
\'a0 \'a0 \'a0 \'a0 _output = (num1 - num2).toString();\
\'a0 \'a0 \'a0 \}\
\'a0 \'a0 \'a0 if (operand == "X") \{\
\'a0 \'a0 \'a0 \'a0 _output = (num1 * num2).toString();\
\'a0 \'a0 \'a0 \}\
\'a0 \'a0 \'a0 if (operand == "/") \{\
\'a0 \'a0 \'a0 \'a0 _output = (num1 / num2).toString();\
\'a0 \'a0 \'a0 \}\
\
\'a0 \'a0 \'a0 num1 = 0.0;\
\'a0 \'a0 \'a0 num2 = 0.0;\
\'a0 \'a0 \'a0 operand = "";\
\'a0 \'a0 \} else \{\
\'a0 \'a0 \'a0 _output = _output + buttonText;\
\'a0 \'a0 \}\
\
\'a0 \'a0 setState(() \{\
\'a0 \'a0 \'a0 output = double.parse(_output).toStringAsFixed(2);\
\'a0 \'a0 \});\
\'a0 \}\
\
\'a0 Widget buildButton(String buttonText) \{\
\'a0 \'a0 return Expanded(\
\'a0 \'a0 \'a0 \'a0 child: OutlinedButton(\
\'a0 \'a0 \'a0 style: OutlinedButton.styleFrom(\
\'a0 \'a0 \'a0 \'a0 shape: RoundedRectangleBorder(\
\'a0 \'a0 \'a0 \'a0 \'a0 borderRadius: BorderRadius.circular(0.0),\
\'a0 \'a0 \'a0 \'a0 ),\
\
\'a0 \'a0 \'a0 \'a0 side: const BorderSide(width: 1, color: Colors.grey),\
\'a0 \'a0 \'a0 \'a0 minimumSize: const Size.fromHeight(\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 50.0), // Set this padding: EdgeInsets.zero, // and this\
\'a0 \'a0 \'a0 ),\
\'a0 \'a0 \'a0 child: Text(\
\'a0 \'a0 \'a0 \'a0 buttonText,\
\'a0 \'a0 \'a0 \'a0 style: const TextStyle(fontSize: 20.0, fontWeight: FontWeight.bold),\
\'a0 \'a0 \'a0 ),\
\'a0 \'a0 \'a0 onPressed: () => buttonPressed(buttonText),\
\'a0 \'a0 ));\
\'a0 \}\
\
\'a0 @override\
\'a0 Widget build(BuildContext context) \{\
\'a0 \'a0 return Scaffold(\
\'a0 \'a0 \'a0 \'a0 appBar: AppBar(\
\'a0 \'a0 \'a0 \'a0 \'a0 title: const Text("Calculator"),\
\'a0 \'a0 \'a0 \'a0 ),\
\'a0 \'a0 \'a0 \'a0 body: Column(\
\'a0 \'a0 \'a0 \'a0 \'a0 children: <Widget>[\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 const Expanded(\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 child: Divider(\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 color: Colors.white,\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 ),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 ),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 Column(children: [\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 Container(\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 alignment: Alignment.centerRight,\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 padding: const EdgeInsets.symmetric(\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 vertical: 24.0, horizontal: 12.0),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 child: Text(output,\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 style: const TextStyle(\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 fontSize: 48.0,\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 fontWeight: FontWeight.bold,\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 ))),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 Row(children: [\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 buildButton("7"),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 buildButton("8"),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 buildButton("9"),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 buildButton("/")\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 ]),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 Row(children: [\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 buildButton("4"),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 buildButton("5"),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 buildButton("6"),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 buildButton("X")\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 ]),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 Row(children: [\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 buildButton("1"),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 buildButton("2"),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 buildButton("3"),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 buildButton("-")\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 ]),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 Row(children: [\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 buildButton("."),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 buildButton("0"),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 buildButton("00"),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 buildButton("+")\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 ]),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 Row(children: [\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 buildButton("CLEAR"),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 buildButton("="),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 ])\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 ])\
\'a0 \'a0 \'a0 \'a0 \'a0 ],\
\'a0 \'a0 \'a0 \'a0 ));\
\'a0 \}\
\}\
\

\f0\b\fs44 EXERCISE 4: \

\f1\b0\fs24 \
import 'package:flutter/material.dart';\
\
final Color darkBlue = Color.fromARGB(255, 18, 32, 47);\
void main() \{\
\'a0 runApp(MyApp());\
\}\
\
class MyApp extends StatelessWidget \{\
\'a0 @override\
\'a0 Widget build(BuildContext context) \{\
\'a0 \'a0 return MaterialApp(\
\'a0 \'a0 \'a0 theme: ThemeData.dark().copyWith(scaffoldBackgroundColor: darkBlue),\
\'a0 \'a0 \'a0 debugShowCheckedModeBanner: false,\
\'a0 \'a0 \'a0 home: Scaffold(\
// Outer white container with padding\
\'a0 \'a0 \'a0 \'a0 body: Container(\
\'a0 \'a0 \'a0 \'a0 \'a0 color: Colors.black,\
\'a0 \'a0 \'a0 \'a0 \'a0 padding: EdgeInsets.symmetric(horizontal: 40, vertical: 80),\
// Inner yellow container\
\'a0 \'a0 \'a0 \'a0 \'a0 child: Container(\
// pass double.infinity to prevent shrinking of the painter area to 0.\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 width: double.infinity,\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 height: double.infinity,\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 color: Color.fromARGB(255, 126, 125, 125),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 child: CustomPaint(painter: FaceOutlinePainter()),\
\'a0 \'a0 \'a0 \'a0 \'a0 ),\
\'a0 \'a0 \'a0 \'a0 ),\
\'a0 \'a0 \'a0 ),\
\'a0 \'a0 );\
\'a0 \}\
\}\
\
class FaceOutlinePainter extends CustomPainter \{\
\'a0 @override\
\'a0 void paint(Canvas canvas, Size size) \{\
\'a0 \'a0 final paint = Paint();\
\'a0 \'a0 paint.style = PaintingStyle.stroke;\
\'a0 \'a0 paint.strokeWidth = 4.0;\
\'a0 \'a0 paint.color = Color.fromARGB(255, 244, 67, 54);\
\
\'a0 \'a0 canvas.drawOval(\
\'a0 \'a0 \'a0 Rect.fromLTWH(size.width - 120, 40, 100, 100),\
\'a0 \'a0 \'a0 paint,\
\'a0 \'a0 );\
\
\'a0 \'a0 canvas.drawRect(\
\'a0 \'a0 \'a0 Rect.fromLTWH(20, 40, 100, 100),\
\'a0 \'a0 \'a0 paint,\
\'a0 \'a0 );\
\
\'a0 \'a0 final mouth = Path();\
\'a0 \'a0 mouth.moveTo(size.width * 0.8, size.height * 0.6);\
\'a0 \'a0 mouth.arcToPoint(\
\'a0 \'a0 \'a0 Offset(size.width * 0.2, size.height * 0.6),\
\'a0 \'a0 \'a0 radius: Radius.circular(150),\
\'a0 \'a0 );\
\'a0 \'a0 canvas.drawPath(mouth, paint);\
\'a0 \}\
\
\'a0 bool shouldRepaint(FaceOutlinePainter oldDelegate) => false;\
\}\
\

\f0\b\fs44 EXERCISE 5: \

\f1\b0\fs24 \
import 'package:flutter/material.dart';\
import 'package:cloud_firestore/cloud_firestore.dart'; void main() => runApp(\
MaterialApp(\
theme: ThemeData( brightness: Brightness.light, primaryColor: Colors.blue, accentColor: Colors.orange),\
home: MyApp(),\
),\
);\
\pard\pardeftab560\sa40\partightenfactor0

\f0\b \cf0 \
\
\pard\pardeftab560\slleading20\partightenfactor0

\f1\b0 \cf0 class MyApp extends StatefulWidget \{ @override\
_MyAppState createState() => _MyAppState();\
\}\
\pard\pardeftab560\sa40\partightenfactor0

\f0\b \cf0 \
\
\pard\pardeftab560\slleading20\partightenfactor0

\f1\b0 \cf0 class _MyAppState extends State<MyApp> \{ List todos = List();\
String input = ''; createTodos() \{\
DocumentReference documentReference = Firestore.instance.collection('MyTodos').document(input);\
Map<String, String> todos = \{'todoTitle': input\}; documentReference.setData(todos).whenComplete(() \{ print('$input created');\
\});\
\page \}\
\pard\pardeftab560\sa40\partightenfactor0

\f0\b \cf0 \
\
\pard\pardeftab560\slleading20\partightenfactor0

\f1\b0 \cf0 deleteTodos() \{\} @override\
Widget build(BuildContext context) \{ return Scaffold(\
appBar: AppBar(\
title: Text('To-Do List'),\
),\
floatingActionButton: FloatingActionButton( child: Icon(Icons.add),\
onPressed: () \{ showDialog( context: context,\
builder: (BuildContext context) \{ return AlertDialog(\
title: Text('Add To-Do'), content: TextField( onChanged: (String value) \{\
input = value;\
\},\
),\
actions: <Widget>[ FlatButton( onPressed: () \{\
createTodos(); Navigator.of(context).pop();\
\},\
child: Text('Add'),\
),\
],\
);\
\page \},\
);\
\},\
),\
\pard\pardeftab560\slleading20\qj\partightenfactor0
\cf0 body: StreamBuilder(\
stream: Firestore.instance.collection('MyTodos').snapshots(), builder: (context, snapshots) \{\
return ListView.builder( shrinkWrap: true,\
itemCount: snapshots.data.documents.length, itemBuilder: (BuildContext context, int index) \{ DocumentSnapshot documentSnapshot =\
snapshots.data.documents[index]; return Dismissible(\
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 key: Key(index.toString()), child: Card(\
elevation: 4.0,\
margin: EdgeInsets.all(8.0), shape: RoundedRectangleBorder(\
borderRadius: BorderRadius.circular(8),\
),\
child: ListTile(\
title: Text(documentSnapshot['todoTitle']), trailing: IconButton(\
icon: Icon( Icons.delete, color: Colors.red,\
),\
onPressed: () \{\
setState(() \{ todos.removeAt(index);\
\});\
\page \
\pard\pardeftab560\sa40\partightenfactor0

\f0\b \cf0 \
\
\
\
\pard\pardeftab560\slleading20\partightenfactor0

\f1\b0 \cf0 \},\
);\
\}));\
\}\
\}\
\
\pard\pardeftab560\sa40\partightenfactor0

\f0\b \cf0 \
\pard\pardeftab560\slleading20\partightenfactor0

\f1\b0 \cf0 \
),\
));\
\
\pard\pardeftab560\li460\slleading20\partightenfactor0
\cf0 \}),\
\pard\pardeftab560\slleading20\partightenfactor0
\cf0 \
\

\f0\b\fs44 EXERCISE 6: \

\f1\b0\fs24 \
import 'package:flutter/foundation.dart';\
import 'package:flutter/material.dart';\
import 'package:webfeed/webfeed.dart';\
import 'package:http/http.dart' as http;\
import 'package:url_launcher/url_launcher.dart';\
\
void main() \{\
\'a0 runApp(const RSSDemo());\
\}\
\
class RSSDemo extends StatelessWidget \{\
\'a0 const RSSDemo(\{Key? key\}) : super(key: key);\
\
\'a0 @override\
\'a0 Widget build(BuildContext context) \{\
\'a0 \'a0 return const MaterialApp(title: "RSS Feed", home: RSSMainPicture());\
\'a0 \}\
\}\
\
class RSSMainPicture extends StatefulWidget \{\
\'a0 const RSSMainPicture(\{Key? key\}) : super(key: key);\
\
\'a0 @override\
\'a0 State<RSSMainPicture> createState() => _RSSMainPictureState();\
\}\
\
class _RSSMainPictureState extends State<RSSMainPicture> \{\
\'a0 late Future<RssFeed> result;\
\'a0 Future<RssFeed> giver() async \{\
\'a0 \'a0 var response = await http.get(Uri.parse(\
\'a0 \'a0 \'a0 \'a0 "https://www.espncricinfo.com/rss/content/story/feeds/0.xml"));\
\'a0 \'a0 var channel = RssFeed.parse(response.body);\
\'a0 \'a0 return channel;\
\'a0 \}\
\
\'a0 @override\
\'a0 void initState() \{\
\'a0 \'a0 super.initState();\
\'a0 \'a0 result = giver();\
\'a0 \}\
\
\'a0 @override\
\'a0 Widget build(BuildContext context) \{\
\'a0 \'a0 return Scaffold(\
\'a0 \'a0 \'a0 appBar: AppBar(\
\'a0 \'a0 \'a0 \'a0 title: const Text("News"),\
\'a0 \'a0 \'a0 \'a0 actions: [\
\'a0 \'a0 \'a0 \'a0 \'a0 IconButton(\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 onPressed: () => result = giver(),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 icon: const Icon(Icons.refresh_rounded)),\
\'a0 \'a0 \'a0 \'a0 ],\
\'a0 \'a0 \'a0 ),\
\'a0 \'a0 \'a0 body: FutureBuilder<RssFeed?>(\
\'a0 \'a0 \'a0 \'a0 future: result,\
\'a0 \'a0 \'a0 \'a0 builder: (context, snapshot) \{\
\'a0 \'a0 \'a0 \'a0 \'a0 if (snapshot.hasError) \{\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 if (kDebugMode) \{\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 print("Error");\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \}\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 return Container();\
\'a0 \'a0 \'a0 \'a0 \'a0 \} else if (snapshot.connectionState == ConnectionState.waiting) \{\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 return const Center(\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 child: CircularProgressIndicator(),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 );\
\'a0 \'a0 \'a0 \'a0 \'a0 \} else if (snapshot.hasData) \{\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 var feed = snapshot.data!;\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 var items = feed.items;\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 return ListView.builder(\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 itemCount: items?.length,\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 itemBuilder: (context, index) \{\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 var item = items![index];\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 return GestureDetector(\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 onTap: () async \{\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 if (!await launchUrl(Uri.parse(item.link!))) \{\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 throw 'Could not launch $\{item.link\}';\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \}\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \},\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 child: ListTile(\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 // leading: CachedNetworkImage(\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 // \'a0 imageUrl: mediaImage!,\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 // \'a0 progressIndicatorBuilder: (context, url, downloadProgress) =>\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 // \'a0 \'a0 \'a0 CircularProgressIndicator(value: downloadProgress.progress),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 // \'a0 errorWidget: (context, url, error) => const Icon(Icons.error),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 // ),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 title: Text(item.title!),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 subtitle: Text("$\{item.pubDate!\}"),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 ),\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 );\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \'a0 \},\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 );\
\'a0 \'a0 \'a0 \'a0 \'a0 \}\
\'a0 \'a0 \'a0 \'a0 \'a0 return Container();\
\'a0 \'a0 \'a0 \'a0 \},\
\'a0 \'a0 \'a0 ),\
\'a0 \'a0 );\
\'a0 \}\
\}\
\

\f0\b\fs44 EXERCISE 7: \

\f1\b0\fs24 \
\pard\pardeftab560\slleading20\partightenfactor0

\f2\i\b \cf0 \ul \ulc0 main.dart\
\
\pard\pardeftab560\slleading20\partightenfactor0

\f1\i0\b0 \cf0 \ulnone import 'package:expt7/pages/home.dart';\
import 'package:flutter/material.dart';\
\
void main() \{\
  runApp(const MyApp());\
\}\
\
class MyApp extends StatelessWidget \{\
  const MyApp(\{super.key\});\
\
  // This widget is the root of your application.\
  @override\
  Widget build(BuildContext context) \{\
    return MaterialApp(\
      title: 'Flutter Demo',\
      theme: ThemeData(\
        primarySwatch: Colors.blue,\
        brightness: Brightness.dark,\
      ),\
      home: const Home(),\
    );\
  \}\
\}\
\
\pard\pardeftab560\slleading20\partightenfactor0

\f2\i\b \cf0 \ul home.dart\
\pard\pardeftab560\slleading20\partightenfactor0

\f1\i0\b0 \cf0 \ulnone \
import 'dart:async';\
import 'dart:math';\
\
import 'package:flutter/foundation.dart';\
import 'package:flutter/material.dart';\
\
class Home extends StatefulWidget \{\
  const Home(\{Key? key\}) : super(key: key);\
\
  @override\
  State<Home> createState() => _HomeState();\
\}\
\
class _HomeState extends State<Home> \{\
  int randint=99;\
  static FutureOr<int> randGen(int cal)\{\
    var rng = Random();\
    return rng.nextInt(100);\
  \}\
  @override\
  Widget build(BuildContext context) \{\
    return Scaffold(\
      appBar: AppBar(\
        title: Text(\
          "Multithreading App",\
        ),\
        centerTitle: true,\
      ),\
      body: Column(\
        mainAxisAlignment: MainAxisAlignment.spaceEvenly,\
        children: <Widget>[\
          Row(\
            mainAxisAlignment: MainAxisAlignment.spaceAround,\
            children: [\
              Text(\
                "Random Number: ",\
                style: TextStyle(\
                  fontSize: 20.0,\
                ),\
              ),\
              Text(\
                "$\{randint\}",\
                style: TextStyle(\
                  fontSize: 20.0,\
                ),\
              ),\
            ],\
          ),\
          SizedBox(\
            height: 20.0,\
          ),\
          TextButton(\
            onPressed: () async\{\
              int result = await compute(randGen,randint);\
              setState(() \{\
                randint = result;\
              \});\
            \},\
            child: Text(\
              "Press Me!",\
              style: TextStyle(\
                fontSize: 20.0,\
              ),\
            ),\
          ),\
        ],\
      ),\
    );\
  \}\
\}\
\
\pard\pardeftab560\slleading20\partightenfactor0

\f0\b\fs44 \cf0 EXERCISE 8: \

\f1\b0\fs24 \
import 'package:flutter/material.dart';\
import 'package:location/location.dart';\
\
void main() \{\
  runApp(const MyApp());\
\}\
\
class MyApp extends StatelessWidget \{\
  const MyApp(\{Key? key\}) : super(key: key);\
\
  // This widget is the root of your application.\
  @override\
  Widget build(BuildContext context) \{\
    return MaterialApp(\
      title: 'Flutter Demo',\
      theme: ThemeData(\
        primarySwatch: Colors.pink,\
      ),\
      home: const Home(),\
    );\
  \}\
\}\
class Home extends StatelessWidget \{\
  const Home(\{Key? key\}) : super(key: key);\
\
  @override\
  Widget build(BuildContext context) \{\
    return Scaffold(\
      appBar: AppBar(\
        title: const Text(\
          "My Location"\
        ),\
        centerTitle: true,\
      ),\
      body: const LocationInfo(\
        \
      ),\
      floatingActionButtonLocation: FloatingActionButtonLocation.centerDocked,\
    );\
  \}\
\}\
\
class LocationInfo extends StatefulWidget \{\
  const LocationInfo(\{Key? key\}) : super(key: key);\
\
  @override\
  State<LocationInfo> createState() => _LocationInfoState();\
\}\
\
class _LocationInfoState extends State<LocationInfo> \{\
  String _myLoc ="My Location";\
  Location location=new Location();\
  late bool _serviceEnabled;\
  late PermissionStatus _permissionGranted;\
  late LocationData _locationData;\
  bool _isListenLocation =false, _isGetLocation = false;\
\
  @override\
  Widget build(BuildContext context) \{\
    return Column(\
      crossAxisAlignment: CrossAxisAlignment.stretch,\
      children: <Widget>[\
        const SizedBox(\
          height: 20.0,\
        ),\
        const Icon(\
          Icons.location_pin,\
        ),\
        const SizedBox(\
          height: 20.0,\
        ),\
        Center(\
          child: Text(\
            "$_myLoc",\
            style: TextStyle(\
              fontSize: 20.0,\
            ),\
          ),\
        ),\
        const SizedBox(\
          height: 20.0,\
        ),\
        FloatingActionButton(\
            child: Icon(\
              Icons.location_on_sharp,\
            ),\
            onPressed: updateLoc,\
        ),\
      ],\
    );\
  \}\
  void updateLoc() async\{\
    _serviceEnabled = await location.serviceEnabled();\
    if(!_serviceEnabled)\{\
      _serviceEnabled = await location.requestService();\
      if(_serviceEnabled)\
        return;\
    \}\
    _permissionGranted = await location.hasPermission();\
    if(_permissionGranted == PermissionStatus.denied)\{\
      _permissionGranted = await location.requestPermission();\
      if(_permissionGranted != PermissionStatus.granted)\
        return;\
    \}\
    _locationData = await location.getLocation();\
    setState(() \{\
      _isGetLocation = true;\
    \});\
    if(_isGetLocation)\{\
      _myLoc="$\{_locationData.latitude\} / $\{_locationData.longitude\}";\
    \}\
  \}\
\}\
\

\f0\b\fs44 EXERCISE 9: \

\f1\b0\fs24 \
import 'dart:math';\
import 'package:flutter/material.dart';\
import 'package:sensors_plus/sensors_plus.dart';\
\
void main() \{\
  runApp(const MyApp());\
\}\
\
class MyApp extends StatelessWidget \{\
  const MyApp(\{super.key\});\
\
  // This widget is the root of your application.\
  @override\
  Widget build(BuildContext context) \{\
    return MaterialApp(\
      title: 'Flutter Demo',\
      theme: ThemeData(\
        // This is the theme of your application.\
        //\
        // Try running your application with "flutter run". You'll see the\
        // application has a blue toolbar. Then, without quitting the app, try\
        // changing the primarySwatch below to Colors.green and then invoke\
        // "hot reload" (press "r" in the console where you ran "flutter run",\
        // or simply save your changes to "hot reload" in a Flutter IDE).\
        // Notice that the counter didn't reset back to zero; the application\
        // is not restarted.\
        primarySwatch: Colors.blue,\
      ),\
      home: const MyHomePage(title: 'Gyroscope and ui'),\
    );\
  \}\
\}\
\
class MyHomePage extends StatefulWidget \{\
  const MyHomePage(\{super.key, required this.title\});\
\
  // This widget is the home page of your application. It is stateful, meaning\
  // that it has a State object (defined below) that contains fields that affect\
  // how it looks.\
\
  // This class is the configuration for the state. It holds the values (in this\
  // case the title) provided by the parent (in this case the App widget) and\
  // used by the build method of the State. Fields in a Widget subclass are\
  // always marked "final".\
\
  final String title;\
\
  @override\
  State<MyHomePage> createState() => _MyHomePageState();\
\}\
\
class _MyHomePageState extends State<MyHomePage> \{\
  double _dx = 0,\
      _dy = 0;\
\
  @override\
  Widget build(BuildContext context) \{\
    return Scaffold(\
      appBar: AppBar(\
        title: Text(widget.title),\
      ),\
      body: StreamBuilder<GyroscopeEvent>(\
        stream: SensorsPlatform.instance.gyroscopeEvents,\
        builder: (context, snapshot) \{\
          if (snapshot.hasData) \{\
            _dy = _dy + snapshot.data!.y * 10;\
            _dx = _dx + snapshot.data!.x * 10;\
          \}\
          return Stack(\
            children: [\
              Positioned(\
                top: _dy,\
                left: _dx,\
                child: GestureDetector(\
                  onPanUpdate: (details) \{\
                    setState(() \{\
                      _dy = max(0, _dy + details.delta.dy);\
                      _dx = max(0, _dx + details.delta.dx);\
                    \});\
                  \},\
                  child: const CircleAvatar(),\
                ),\
              )\
            ],\
          );\
        \},\
      ),\
    );\
  \}\
\}\
\

\f0\b\fs44 EXERCISE 10: \

\f1\b0\fs24 \
import 'package:expt10/pages/home.dart';\
import 'package:flutter/material.dart';\
\
void main() \{\
  runApp(const MyApp());\
\}\
\
class MyApp extends StatelessWidget \{\
  const MyApp(\{Key? key\}) : super(key: key);\
\
  // This widget is the root of your application.\
  @override\
  Widget build(BuildContext context) \{\
    return MaterialApp(\
      title: 'Experiment 10',\
      theme: ThemeData.dark(),\
      home: const Home(),\
    );\
  \}\
\}\
\
home.dart\
import 'package:expt10/services/local_notification_service.dart';\
import 'package:flutter/material.dart';\
\
class Home extends StatefulWidget \{\
  const Home(\{Key? key\}) : super(key: key);\
\
  @override\
  State<Home> createState() => _HomeState();\
\}\
\
class _HomeState extends State<Home> \{\
  late final LocalNotificationService service;\
  @override\
  void initState()\{\
    service = LocalNotificationService();\
    service.initialize();\
    super.initState();\
  \}\
  @override\
  Widget build(BuildContext context) \{\
    return Scaffold(\
      appBar: AppBar(\
        title: const Text(\
          "Local Notifications Expt"\
        ),\
        backgroundColor: const Color(0xff006473),\
        centerTitle: true,\
      ),\
      body: Padding(\
        padding: EdgeInsets.all(MediaQuery.of(context).size.width*0.25),\
        child: Column(\
          children: <Widget>[\
            TextButton(\
                onPressed: () async \{\
                  await service.showNotification(\
                      id: 0,\
                      title: "Sample Notification",\
                      body: "Sample Body"\
                  );\
                \},\
                child: const Text(\
                  "Get an instant Notification"\
                ),\
            ),\
            TextButton(\
              onPressed: () async \{\
                await service.showScheduledNotification(\
                    id: 0,\
                    title: "Sample Notification",\
                    body: "Sample Body",\
                    seconds: 4,\
                );\
              \},\
              child: const Text(\
                  "Get a delayed Notification"\
              ),\
            ),\
          ],\
        ),\
      ),\
    );\
  \}\
\}\
\
local_notification_service.dart\
import 'package:flutter_local_notifications/flutter_local_notifications.dart';\
import 'package:timezone/timezone.dart' as tz;\
import 'package:timezone/data/latest.dart' as tz;\
\
class LocalNotificationService \{\
  LocalNotificationService();\
\
  final _localNotificationService = FlutterLocalNotificationsPlugin();\
\
  Future<void> initialize() async\{\
    tz.initializeTimeZones();\
    const AndroidInitializationSettings androidInitializationSettings =\
    AndroidInitializationSettings('ic_stat_assistant_navigation');\
\
    const DarwinInitializationSettings iosInitializationSettings =\
        DarwinInitializationSettings(\
          requestAlertPermission: true,\
          requestBadgePermission: true,\
          requestSoundPermission: true,\
        );\
    const InitializationSettings settings = InitializationSettings(\
        android: androidInitializationSettings,\
        iOS: iosInitializationSettings\
    );\
\
    await _localNotificationService.initialize(settings);\
  \}\
  Future<NotificationDetails> _notificationDetails() async\{\
    const AndroidNotificationDetails androidNotificationDetails = AndroidNotificationDetails(\
        "channel_id", "channel_name",\
      channelDescription: "Description",\
      importance: Importance.max,\
      priority: Priority.max,\
      playSound: true,\
    );\
    const DarwinNotificationDetails darwinNotificationDetails = DarwinNotificationDetails();\
    return const NotificationDetails(android: androidNotificationDetails,iOS: darwinNotificationDetails);\
  \}\
  Future<void> showNotification(\{\
    required int id,\
    required String title,\
    required String body\}) async\{\
      final details = await _notificationDetails();\
      await _localNotificationService.show(id, title, body, details);\
  \}\
  Future<void> showScheduledNotification(\{\
    required int id,\
    required String title,\
    required String body,\
    required int seconds\
  \}) async\{\
    final details = await _notificationDetails();\
    await _localNotificationService.zonedSchedule(\
      id,\
      title,\
      body,\
      tz.TZDateTime.from(DateTime.now().add(Duration(seconds: seconds)), tz.local,),\
      details,\
      androidAllowWhileIdle: true,\
      uiLocalNotificationDateInterpretation: UILocalNotificationDateInterpretation.absoluteTime\
    );\
  \}\
\}\
\

\f0\b\fs44 EXERCISE 11: \

\f1\b0\fs24 \
import 'package:flutter/material.dart';\
import 'pages/home.dart';\
void main() \{\
  runApp(const MyApp());\
\}\
\
class MyApp extends StatelessWidget \{\
  const MyApp(\{super.key\});\
\
  // This widget is the root of your application.\
  @override\
  Widget build(BuildContext context) \{\
    return MaterialApp(\
      title: 'Flutter Demo',\
      theme: ThemeData(\
        primarySwatch: Colors.cyan,\
        brightness: Brightness.dark,\
      ),\
      home: const Home(),\
    );\
  \}\
\}\
\
home.dart\
import 'package:flutter/material.dart';\
import 'package:flutter_alarm_clock/flutter_alarm_clock.dart';\
\
class Home extends StatefulWidget \{\
  const Home(\{Key? key\}) : super(key: key);\
\
  @override\
  State<Home> createState() => _HomeState();\
\}\
\
class _HomeState extends State<Home> \{\
  TimeOfDay time= TimeOfDay(hour: 23, minute: 59);\
  @override\
  Widget build(BuildContext context) \{\
    return Scaffold(\
      appBar: AppBar(\
        title: Text(\
          "Alarm Clock",\
        ),\
        centerTitle: true,\
        elevation: 0.0,\
        backgroundColor: Colors.cyan,\
      ),\
      body: Padding(\
        padding: EdgeInsets.all(20),\
        child: Center(\
          child: Column(\
            mainAxisAlignment: MainAxisAlignment.center,\
            children: [\
              Row(\
                mainAxisAlignment: MainAxisAlignment.spaceEvenly,\
                children: [\
                  Text(\
                    "Time set: ",\
                    style: TextStyle(\
                      fontSize: 30.0,\
                    ),\
                  ),\
                  Text(\
                    "$\{time.hour.toString().padLeft(2,'0')\}:$\{time.minute.toString().padLeft(2,'0')\}",\
                    style: TextStyle(\
                      fontSize: 30.0,\
                      color: Colors.cyan,\
                    ),\
                  )\
                ],\
              ),\
              SizedBox(\
                height: 30.0,\
              ),\
              Row(\
                mainAxisAlignment: MainAxisAlignment.spaceAround,\
                children: [\
                  TextButton(\
                    onPressed: () async\{\
                      TimeOfDay? newTime = await showTimePicker(\
                          context: context,\
                          initialTime: time,\
                      );\
                      if(newTime == null) return;\
                      setState(() \{\
                        time = newTime;\
                      \});\
                    \},\
                    child: Text(\
                      "Edit Time",\
                      style: TextStyle(\
                        fontSize: 17.0,\
                      ),\
                    ),\
                  ),\
                  TextButton(\
                    onPressed: () \{\
                      FlutterAlarmClock.createAlarm(time.hour,time.minute);\
                    \},\
                    child: Text(\
                      "Set Alarm",\
                      style: TextStyle(\
                        fontSize: 17.0,\
                      ),\
                    ),\
                  ),\
                ],\
              ),\
            ],\
          ),\
        ),\
      ),\
    );\
  \}\
\}\
\

\f0\b\fs44 EXERCISE 12: \

\f1\b0\fs24 \
import 'dart:convert';\
\
import 'package:flutter/material.dart';\
import 'package:http/http.dart' as http;\
\
void main() \{\
  runApp(const MyApp());\
\}\
\
class MyApp extends StatelessWidget \{\
  const MyApp(\{super.key\});\
\
  // This widget is the root of your application.\
  @override\
  Widget build(BuildContext context) \{\
    return MaterialApp(\
      title: 'Api Calls',\
      theme: ThemeData(\
        // This is the theme of your application.\
        //\
        // Try running your application with "flutter run". You'll see the\
        // application has a blue toolbar. Then, without quitting the app, try\
        // changing the primarySwatch below to Colors.green and then invoke\
        // "hot reload" (press "r" in the console where you ran "flutter run",\
        // or simply save your changes to "hot reload" in a Flutter IDE).\
        // Notice that the counter didn't reset back to zero; the application\
        // is not restarted.\
        primarySwatch: Colors.blue,\
      ),\
      home: const MyHomePage(title: 'Codeforces Problem Set'),\
    );\
  \}\
\}\
\
class MyHomePage extends StatefulWidget \{\
  const MyHomePage(\{super.key, required this.title\});\
\
  // This widget is the home page of your application. It is stateful, meaning\
  // that it has a State object (defined below) that contains fields that affect\
  // how it looks.\
\
  // This class is the configuration for the state. It holds the values (in this\
  // case the title) provided by the parent (in this case the App widget) and\
  // used by the build method of the State. Fields in a Widget subclass are\
  // always marked "final".\
\
  final String title;\
\
  @override\
  State<MyHomePage> createState() => _MyHomePageState();\
\}\
\
class _MyHomePageState extends State<MyHomePage> \{\
  late Future<Map<String,dynamic>> info;\
  @override\
  void initState()\{\
    info=giver();\
    super.initState();\
  \}\
  \
  Future<Map<String,dynamic>> giver() async\{\
    var response = await http.get(Uri.parse("https://www.boredapi.com/api/activity"));\
    Map<String,dynamic> result=json.decode(response.body);\
    //print(result);\
    return result;\
  \}\
  @override\
  Widget build(BuildContext context)\{\
    return Scaffold(\
      appBar: AppBar(\
        title: const Text("Bored API"),\
        actions: [\
          IconButton(onPressed: ()=>setState(() \{\
            info=giver();\
          \}), icon: const Icon(Icons.refresh_rounded))\
        ],\
      ),\
      body: FutureBuilder<Map<String,dynamic>>(\
        future: info,\
        builder: (context,snapshot)\{\
          if(snapshot.connectionState==ConnectionState.waiting)\{\
            return const Center(child: CircularProgressIndicator());\
          \}\
          Map<String,dynamic> data=\{\};\
          if(snapshot.hasData)\{\
            data=snapshot.data!;\
            return Center(\
              child: Column(\
                mainAxisAlignment: MainAxisAlignment.center,\
                children: [\
                  Text("Activity: $\{data["activity"]\}"),\
                  Text("Type: $\{data["type"]\}"),\
                  Text("Participants: $\{data["participants"]\}"),\
                  Text("Price: \\$$\{data["price"]\}"),\
                ],\
              ),\
            );\
          \}\
          return Container();\
        \},\
      ),\
    );\
  \}\
\}\
\
}